/*----------------------------------------------------------------------------*/
/* Copyright (c) 2017-2018 FIRST. All Rights Reserved.                        */
/* Open Source Software - may be modified and shared by FRC teams. The code   */
/* must be accompanied by the FIRST BSD license file in the root directory of */
/* the project.                                                               */
/*----------------------------------------------------------------------------*/

package frc.robot;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.PWMVictorSPX;
import edu.wpi.first.wpilibj.TimedRobot;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import com.kauailabs.navx.frc.*;
import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.*;
import com.ctre.phoenix.unmanaged.UnmanagedJNI;


/**
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the TimedRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the manifest file in the resource
 * directory.
 */
public class Simple extends TimedRobot {
  private final PWMVictorSPX victor = new PWMVictorSPX(0);
  private final Timer m_timer = new Timer();
  private final AHRS ahrs = new AHRS();
  private WPI_TalonSRX drive1;
  private WPI_TalonSRX drive2;

  Joystick stick = new Joystick(0);

  /**
   * This function is run when the robot is first started up and should be
   * used for any initialization code.
   */
  @Override
  public void robotInit() {
    drive1 = new WPI_TalonSRX(1);
    drive2 = new WPI_TalonSRX(2);
  }

  @Override
  public void robotPeriodic() {

  }

  /**
   * This function is run once each time the robot enters autonomous mode.
   */
  @Override
  public void autonomousInit() {
    m_timer.reset();
    m_timer.start();
  }

  /**
   * This function is called periodically during autonomous.
   */
  @Override
  public void autonomousPeriodic() {


  }
  /**
   * This function is called once each time the robot enters teleoperated mode.
   */
  @Override
  public void teleopInit() {

    int fw1 = drive1.getFirmwareVersion();
    int fw2 = drive2.getFirmwareVersion();

    System.out.println("Firmware versions:  " + fw1 + "   " + fw2);
    
  }

  /**
   * This function is called periodically during teleoperated mode.
   */
  @Override
  public void teleopPeriodic() {

    int period = 100;
    UnmanagedJNI.JNI_FeedEnable(period);

    drive1.feed();
    drive2.feed();

    drive1.set(stick.getY());
    drive2.set(stick.getY());

    //victor.set(stick.getRawAxis(4));


  }

  /**
   * This function is called periodically during test mode.
   */
  @Override
  public void testPeriodic() {
  }
}
